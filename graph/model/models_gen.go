// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Coordinates struct {
	Lat float64 `json:"Lat"`
	Lon float64 `json:"Lon"`
}

type CoordinatesInput struct {
	Lat float64 `json:"Lat"`
	Lon float64 `json:"Lon"`
}

type Login struct {
	Username string `json:"Username"`
	Password string `json:"Password"`
}

type Mutation struct {
}

type PageInfo struct {
	HasNextPage bool    `json:"hasNextPage"`
	EndCursor   *string `json:"endCursor,omitempty"`
}

type Query struct {
}

type Sighting struct {
	ID          int          `json:"ID"`
	TigerID     int          `json:"TigerID"`
	Timestamp   string       `json:"Timestamp"`
	Coordinates *Coordinates `json:"Coordinates"`
	ImageURL    *string      `json:"ImageURL,omitempty"`
}

type SightingConnection struct {
	Edges    []*SightingEdge `json:"edges,omitempty"`
	PageInfo *PageInfo       `json:"pageInfo"`
}

type SightingEdge struct {
	Node   *Sighting `json:"node"`
	Cursor string    `json:"cursor"`
}

type Tiger struct {
	ID                  int          `json:"ID"`
	Name                string       `json:"Name"`
	DateOfBirth         string       `json:"DateOfBirth"`
	LastSeenTimestamp   string       `json:"LastSeenTimestamp"`
	LastSeenCoordinates *Coordinates `json:"LastSeenCoordinates"`
}

type TigerConnection struct {
	Edges    []*TigerEdge `json:"edges,omitempty"`
	PageInfo *PageInfo    `json:"pageInfo"`
}

type TigerEdge struct {
	Node   *Tiger `json:"node"`
	Cursor string `json:"cursor"`
}

type TokenMeta struct {
	Token  string `json:"Token"`
	Expiry string `json:"Expiry"`
}

type User struct {
	ID       string  `json:"ID"`
	Username string  `json:"Username"`
	Password string  `json:"Password"`
	Email    string  `json:"Email"`
	Token    *string `json:"Token,omitempty"`
	Expiry   *string `json:"Expiry,omitempty"`
}
